version: '3.8'

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: expense-tracker-Frontend
    ports:
      - '5173:5173'
    volumes: 
      - ./Frontend:/app
    depends_on:
      - backend 

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: expense-tracker-Backend
    ports:
      - '3000:3000'
    volumes:
      - ./Backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@db:5432/user?schema=public
    depends_on:
      db:
        condition: service_healthy

  
  db:
    image: postgres:alpine
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: user
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data: